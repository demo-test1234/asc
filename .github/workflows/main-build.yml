name: Build

on:
    push:
        branches:
            - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
          include:
#              - os: ubuntu-latest
#                arch: [arm64, amd64]
#              - os: macos-latest
#                arch: [arm64]
              - os: windows-latest
                arch: [amd64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Code Prepare
        run: git submodule update --init --recursive

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          activate-environment: "test"
          python-version: 3.8
          auto-activate-base: false

      - name: Install Dependencies
        shell: bash -el {0}
        run: |
          conda info
          python --version
          conda install -y -c conda-forge pynini==2.1.5
          pip install pyinstaller==6.10.0
          pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com

      - name: Download Model
        shell: bash -el {0}
        run: python download_model.py

      - name: Build PyInstaller
        shell: bash -el {0}
        run: pyinstaller -y build.spec

      - name: Clean
        run: rm -rfv ./dist/server-cosyvoice/_dep/pretrained_models/CosyVoice-300M/.git

      - name: Debug
        run: ls -al ./dist/

      - name: Zip Dist
        run: |
          if [ ${{ runner.os }} == 'Linux' ] || [ ${{ runner.os }} == 'macOS' ]; then
            zip -r server-cosyvoice.zip dist/server-cosyvoice
          elif [ ${{ runner.os }} == 'Windows' ]; then
            powershell Compress-Archive -Path dist/server-cosyvoice -DestinationPath server-cosyvoice.zip
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            path: server-cosyvoice.zip

