name: Build

on:
    push:
        branches:
            - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
          include:
#              - os: ubuntu-latest
#                arch: [arm64, amd64]
              - os: macos-latest
                arch: [arm64]
#              - os: windows-latest
#                arch: [arm64, amd64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Code Prepare
        run: git submodule update --init --recursive

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          python-version: 3.8
          auto-activate-base: false

      - name: Test
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          python --version
#          pip install Cython
#          conda install -y -c conda-forge pynini==2.1.5
#          pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
#
#      - name: Prepare
#        run: |
#          pip install --upgrade pip setuptools wheel
#          pip install Cython
#          pip install pynini
#
#      - name: Install Dependencies
#        run: pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com
#
#      - name: Download Models
#        run: python -m download_model.py
#
#      - name: Install PyInstaller 6.10.0
#        run: pip install pyinstaller==6.10.0
#
#      - name: Build PyInstaller
#        run: pyinstaller -y build.spec
#
#      - name: Clean
#        run: rm -rfv ./dist/server-cosyvoice/_dep/pretrained_models/CosyVoice-300M/.git
#
#      - name: Debug
#        run: ls -al ./dist/

#      - name: Build Release Files
#        run: npm run build
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v4
#        with:
#            path: |
#                dist-release/*.exe
#                dist-release/*.dmg
#                dist-release/*.AppImage
#                dist-release/*.deb

